---
import "../styles/styles.css";
---

<header class="content-header">
  <div>
    <img src="img/header1.gif" class="w-[60rem] h-[26rem]" alt="" />
  </div>

  <div class="header-inicio">
    <div class="img-inicio">
      <picture>
        <img class="img-logo" src="img/logo.webp" alt="Adrian.dev" />
      </picture>

      <a
        href="https://github.com/AdrianQuispe16"
        target="_blank"
        class="button"
      >
        <span class="text-lg font-extrabold font-sans">Git Hub</span>
        <svg
          fill="currentColor"
          class="w-5 h-5"
          viewBox="0 0 24 24"
          role="img"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.387.6.113.82-.258.82-.577v-2.17c-3.338.724-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.757-1.333-1.757-1.089-.744.083-.729.083-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.997.108-.776.418-1.305.762-1.605-2.665-.3-5.467-1.332-5.467-5.93 0-1.31.467-2.381 1.235-3.221-.135-.303-.54-1.524.105-3.176 0 0 1.005-.322 3.3 1.23a11.5 11.5 0 016 0c2.28-1.552 3.285-1.23 3.285-1.23.645 1.652.24 2.873.12 3.176.765.84 1.23 1.911 1.23 3.221 0 4.61-2.807 5.625-5.475 5.92.435.375.825 1.096.825 2.21v3.285c0 .315.21.693.825.573C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12z"
          ></path>
        </svg>
      </a>
    </div>
    <h1 class="title-1">Adrian Quispe</h1>
    <div>
      <p class="parrafo">La innovación empieza con una línea de código. ✨</p><p
        class="parrafo"
      >
        Desarrollador Full Stack Junior. Con experiencia en frontend y backend.
        Apasionado por el desarrollo de software. Enfocado en aprender nuevas
        tecnologías y mejorar mis habilidades.
      </p>
    </div>
    <span class="dato-descripcion">
      <span class="flex items-center gap-1">
        <svg
          class="w-6 h-6"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          stroke="#A3A3A3"
        >
          <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
          <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"></g>
          <g id="SVGRepo_iconCarrier">
            <path
              opacity="0.5"
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M6.5 1.75C6.5 1.33579 6.16421 1 5.75 1C5.33579 1 5 1.33579 5 1.75V21.75C5 22.1642 5.33579 22.5 5.75 22.5C6.16421 22.5 6.5 22.1642 6.5 21.75V13.6V3.6V1.75Z"
              fill="#A3A3A3"></path>

            <path
              d="M13.3486 3.78947L13.1449 3.70801C11.5821 3.08288 9.8712 2.9258 8.22067 3.25591L6.5 3.60004V13.6L8.22067 13.2559C9.8712 12.9258 11.5821 13.0829 13.1449 13.708C14.8385 14.3854 16.7024 14.5119 18.472 14.0695L18.6864 14.0159C19.3115 13.8597 19.75 13.298 19.75 12.6538V5.28673C19.75 4.50617 19.0165 3.93343 18.2592 4.12274C16.628 4.53055 14.9097 4.41393 13.3486 3.78947Z"
              fill="#A3A3A3"></path>
          </g>
        </svg>
        <span class="text-neutral-400 text-xs">Nacionalidad: Peruano</span>
      </span>

      <span class="flex items-center gap-1">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="#A3A3A3"
          class="w-6 h-6"
        >
          <path
            d="M3 22h18c.553 0 1-.447 1-1v-2c0-.553-.447-1-1-1h-2v-13c0-.553-.447-1-1-1h-4c-.553 0-1 .447-1 1v13h-2v-13c0-.553-.447-1-1-1H4c-.553 0-1 .447-1 1v13H3c-.553 0-1 .447-1 1v2c0 .553.447 1 1 1zm7-15h4v12h-4V7z"
          ></path>
        </svg>

        <span class="text-neutral-400 text-xs">Educación: SENATI</span></span
      >
      <span class="flex items-center gap-1">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 20 20"
          fill="#A3A3A3"
          class="w-5 h-5"
        >
          <path
            fill-rule="evenodd"
            d="M6 3.75A2.75 2.75 0 018.75 1h2.5A2.75 2.75 0 0114 3.75v.443c.572.055 1.14.122 1.706.2C17.053 4.582 18 5.75 18 7.07v3.469c0 1.126-.694 2.191-1.83 2.54-1.952.599-4.024.921-6.17.921s-4.219-.322-6.17-.921C2.694 12.73 2 11.665 2 10.539V7.07c0-1.321.947-2.489 2.294-2.676A41.047 41.047 0 016 4.193V3.75zm6.5 0v.325a41.622 41.622 0 00-5 0V3.75c0-.69.56-1.25 1.25-1.25h2.5c.69 0 1.25.56 1.25 1.25zM10 10a1 1 0 00-1 1v.01a1 1 0 001 1h.01a1 1 0 001-1V11a1 1 0 00-1-1H10z"
            clip-rule="evenodd"></path>
          <path
            d="M3 15.055v-.684c.126.053.255.1.39.142 2.092.642 4.313.987 6.61.987 2.297 0 4.518-.345 6.61-.987.135-.041.264-.089.39-.142v.684c0 1.347-.985 2.53-2.363 2.686a41.454 41.454 0 01-9.274 0C3.985 17.585 3 16.402 3 15.055z"
          ></path>
        </svg>
        <span class="text-neutral-400 text-xs"
          >Ingenieor de Software con I.A</span
        ></span
      ></span
    >

    <div class="correo-descripion justify-center">
      <p class="parrafo">Ponte en contacto conmigo:</p>
      <div class="flex w-96">
        <input
          class="button-copiar"
          name="email_address"
          value="adrianquispe515@gmail.com"
          aria-label="Email Address"
          placeholder="adrianquispe515@gmail.com"
          type="email"
          readonly
        /><button class="button-correo" onclick="copiarCorreo()">Copiar</button>

        <script>
        function copiarCorreo(): void {
            const correo = "adrianquispe515@gmail.com";
            navigator.clipboard.writeText(correo).then(() => {
            }).catch(err => {
                console.error("Error al copiar: ", err);
            });
        }
        
        (window as any).copiarCorreo = copiarCorreo;
        </script>
        
        
      </div>
    </div>

    <!-- Para navegar dentro de la pagina-->
    <ul class="nav-descripcion" role="tablist">
      <li class="nav-opciones" role="presentation">
        <button
          data-tab-active="true"
          data-target="#aboutMe"
          class="button-opciones"
          role="tab"
          id="tab1"
        >
          <span
            class="text-base py-2 border-b-4 text-colorOpciones font-semibold border-transparent"
            data-active-class="opcion-seleccionada"
          >
            Sobre Mi
          </span>
        </button>
      </li>
      <li class="nav-opciones" role="presentation">
        <button
          data-tab-active="false"
          data-target="#education"
          class="button-opciones"
          role="tab"
          id="tab2"
          tabindex="-1"
        >
          <span
            class="text-base py-2 border-b-4 text-colorOpciones font-semibold border-transparent"
            data-active-class="opcion-seleccionada"
          >
            Educación
          </span>
        </button>
      </li>
      <li class="nav-opciones" role="presentation">
        <button
          data-tab-active="false"
          data-target="#experience"
          class="button-opciones"
          role="tab"
          id="tab3"
          tabindex="-1"
        >
          <span
            class="text-base py-2 border-b-4 text-colorOpciones font-semibold border-transparent"
            data-active-class="opcion-seleccionada"
          >
            Experiencia
          </span>
        </button>
      </li>
      <li class="nav-opciones" role="presentation">
        <button
          data-tab-active="false"
          data-target="#skills"
          class="button-opciones"
          role="tab"
          id="tab4"
          tabindex="-1"
        >
          <span
            class="text-base py-2 border-b-4 text-colorOpciones font-semibold border-transparent"
            data-active-class="opcion-seleccionada"
          >
            Habilidades
          </span>
        </button>
      </li>
    </ul>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const tabs = document.querySelectorAll('[role="tab"]');
        const containers = document.querySelectorAll(
          "#aboutMe, #education, #experience, #skills"
        );
        const body = document.body;

        const isLightMode = () => body.classList.contains("body-dia");

        // Función para actualizar los estilos de los tabs
        const updateTabStyles = () => {
          tabs.forEach((tab) => {
            const span = tab.querySelector("span");

            // Si el tab está activo
            if (tab.getAttribute("data-tab-active") === "true") {
              span?.classList.add("border-b-4", "border-pink-500"); 
              span?.classList.remove("text-gray-500");

              // Dependiendo del modo (claro u oscuro) aplica los colores correctos
              if (isLightMode()) {
                span?.classList.add("text-black");
                span?.classList.remove("text-white");
              } else {
                span?.classList.add("text-white");
                span?.classList.remove("text-black");
              }
            } else {
              span?.classList.remove(
                "border-b-4",
                "border-pink-500",
                "text-black",
                "text-white"
              );
              span?.classList.add("text-gray-500", "border-transparent");
            }

            // Asegurarse de que todos los tabs tengan el hover en modo claro y oscuro
            if (isLightMode()) {
              tab.classList.add("hover:bg-gray-300"); 
            } else {
              tab.classList.remove("hover:bg-gray-300"); 
            }
          });
        };

        // Activar el primer tab por defecto
        const firstTab = tabs[0];
        const firstTargetId = firstTab.getAttribute("data-target");
        const firstTargetContainer = firstTargetId
          ? document.querySelector<HTMLElement>(firstTargetId)
          : null;

        if (firstTab && firstTargetContainer) {
          firstTab.setAttribute("data-tab-active", "true");
          firstTargetContainer.hidden = false;
        }

        updateTabStyles(); 

        tabs.forEach((tab) => {
          const targetId = tab.getAttribute("data-target");
          const targetContainer = targetId
            ? document.querySelector<HTMLElement>(targetId)
            : null;

          tab.addEventListener("click", () => {
            containers.forEach((container) => {
              if (container instanceof HTMLElement) {
                container.hidden = true; 
              }
            });

            tabs.forEach((otherTab) => {
              otherTab.setAttribute("data-tab-active", "false");
            });

            // Activar el tab y su contenedor actual
            tab.setAttribute("data-tab-active", "true");
            if (targetContainer instanceof HTMLElement) {
              targetContainer.hidden = false;
            }

            updateTabStyles();
          });
        });

        // Detectar cambios en el modo oscuro/claro
        const themeToggleBtn = document.getElementById("themeToggleBtn");
        if (themeToggleBtn) {
          themeToggleBtn.addEventListener("click", () => {
            setTimeout(updateTabStyles, 100); 
          });
        }
      });
    </script>
  </div>
</header>
